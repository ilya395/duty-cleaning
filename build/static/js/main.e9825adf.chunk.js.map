{"version":3,"sources":["components/Calendar/Calendar.js","components/LogoutButton/LogoutButton.js","services/index.js","components/Modal/Modal.js","context/firebaseContext.js","components/Preloader/Preloader.js","layouts/MainLayout/MainLayout.js","layouts/AuthLayout/AuthLayout.js","context/routesContext.js","services/privateRoute.js","routes.js","App.js","serviceWorker.js","services/firebase.js","index.js"],"names":["moment","locale","weekdays","week","dow","doy","localizer","momentLocalizer","myEventsList","title","start","end","allDay","MyCalendar","props","className","events","startAccessor","endAccessor","views","month","onSelectEvent","event","clickOnDay","move","LogoutButton","type","danger","onClick","logoutPlz","counterEvents","object","queueСollection","data","today","mutations","numberOfDays","daysInMonth","thisYear","format","thisMonth","array","countOfDaysNumber","i","obj","isoWeekday","indexInQueueСollection","findIndex","item","id","length","whosOnDuty","find","eventId","push","Option","Select","ModalWindow","useState","disabledSelect","setDisabledSelect","useEffect","eventName","thisDay","date","handleCancel","changeVisible","visible","onOk","onCancel","showSearch","style","width","placeholder","optionFilterProp","onChange","value","changeNewEventId","onFocus","console","log","onBlur","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","disabled","map","key","FirebaseContext","React","createContext","Preloader","size","Header","Layout","Content","Footer","dataDefault","MainLayout","loading","setLoading","setData","setToday","mutationData","setMutationData","dataForCalendar","setdataForCalendar","modal","setModal","changeDate","setChangeDate","changeEventId","setChangeEventId","changeEventTitle","setChangeEventTitle","useContext","Firebase","getDepartmentsRef","getMutationsRef","auth","once","then","res","newArray","forEach","element","catch","e","message","Date","muts","year","error","newEventId","a","num","prevState","mutsFromFirebase","index","set","theme","mode","defaultSelectedKeys","Item","signOut","localStorage","removeItem","history","padding","textAlign","layout","labelCol","span","wrapperCol","tailLayout","offset","AuthLayout","setHistory","authOk","setAuthOk","signWithEmail","name","initialValues","remember","onFinish","values","email","password","setItem","user","uid","onFinishFailed","errorInfo","label","rules","required","Password","htmlType","RoutesContext","PrivateRoute","Component","component","rest","render","getItem","to","useRoutes","isAuthenticated","path","Provider","App","userId","setUserId","onAuthStateChanged","JSON","stringify","routes","Boolean","window","location","hostname","match","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","signInWithEmailAndPassword","database","ref","requestRef","str","firebase","this","userUid","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9825adf.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Calendar.scss';\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\n// moment.locale(\"ru-RU\");\n\nmoment.locale('ru', {\n    weekdays : [\n        \"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"\n    ],\n    week: {\n        dow: 1,\n        doy: 1,\n    },\n});\n// console.log(moment);\n// console.log(moment.locale());\nconst localizer = momentLocalizer(moment);\n\nconst myEventsList = [{\n    title: 'Архитекторы',\n    start: moment([2020, 8, 9]),\n    end: moment([2020, 8, 9]),\n    allDay: true, \n}];\n\n// const [queue, setQueue] = useState([]);\n\nconst MyCalendar = (props) => {\n\n  // console.log('#### Props in Calendar', props.events)\n\n    const move = (event) => {\n        props.clickOnDay(event);\n    }\n\n    return (\n      <div className=\"calendar-container\">\n        <Calendar\n          localizer={localizer}\n          events={props.events || myEventsList}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          views={{\n            month: true,\n          }}\n          onSelectEvent={event => move(event)}\n        />\n      </div>\n    );\n}   \n\nexport default MyCalendar;","import React from 'react';\n\nimport { Button } from 'antd';\n\nconst LogoutButton = (props) => {\n\n    return (\n        <>\n            <Button \n                type=\"primary\" \n                danger\n                onClick={props.logoutPlz}\n            >\n                Выкатиться\n            </Button>\n        </>\n    );\n}\n\nexport default LogoutButton;","import moment from 'moment';\n\nconst counterEvents = (object) => {\n    const { data: queueСollection, today, mutations } = object;\n    // console.log('#### counterEvents: ', mutations);\n\n    const numberOfDays = moment(today).daysInMonth(); // количество дней в месяце\n    const thisYear = moment(today).format('YYYY'); // текущий год\n    const thisMonth = moment(today).format('M') - 1;  // текущий месяц\n\n    let array = [];\n    // let countOfCut = 0;\n    let countOfDaysNumber = 0;\n\n    // const iter = Math.floor(numberOfDays/queueСollection.length); // отношение: сколько целых раз малая коллекция может поместиться в большой (отсечка)\n    // отсечка равна queueСollection.length\n    // const surplus = numberOfDays%queueСollection.length; // отстаток\n\n    for ( let i = 0; i < numberOfDays; i++) { // день = i + 1\n\n        const obj = {\n            title: '',\n            start: moment([thisYear, thisMonth, i + 1]),\n            end: moment([thisYear, thisMonth, i + 1]),\n            allDay: true,\n        }\n\n        if (\n            moment([thisYear, thisMonth, i + 1]).isoWeekday() !== 6 &&\n            moment([thisYear, thisMonth, i + 1]).isoWeekday() !== 7 &&\n            moment([thisYear, thisMonth, i + 1]).isoWeekday() !== 0\n        ) {\n\n            // счетчики\n            countOfDaysNumber++; // отсчитываем дни в отрезке\n            if ( mutations[i] ) {\n                const indexInQueueСollection = queueСollection.findIndex(item => item.id === mutations[i]);\n                countOfDaysNumber = indexInQueueСollection + 1;\n            }\n            if ( countOfDaysNumber > queueСollection.length ) {\n                // countOfCut++; // отрезки\n                countOfDaysNumber = 1;\n            }\n            //\n\n            let whosOnDuty = {};\n\n            if ( mutations[i] ) {\n                whosOnDuty = queueСollection.find( item => item.id === mutations[i] );\n            } else {\n                whosOnDuty = queueСollection[ countOfDaysNumber - 1 ];\n            }\n\n            obj.title = whosOnDuty.title;\n            obj.eventId = whosOnDuty.id\n        } else {\n            obj.title = 'Выходной';\n            obj.eventId = 99;\n        }\n\n        array.push(obj);\n        \n    }\n    return array;\n}\n\nexport default counterEvents;","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport './Modal.scss';\n\nimport { Modal, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst ModalWindow = (props) => {\n    // console.log('#### Modal props: ', props);\n\n    const [disabledSelect, setDisabledSelect] = useState(false);\n\n    useEffect(() => {\n        props.eventName === 'Выходной' ? setDisabledSelect(true) : setDisabledSelect(false);\n        const today = +moment(props.today).format('D');\n        const thisDay = +moment(props.date).format('D');\n        thisDay < today ? setDisabledSelect(true) : setDisabledSelect(false);\n    }, [props.eventName, props.today, props.date]);\n\n    const handleCancel = () => {\n        props.changeVisible(!props.visible);\n    }\n\n    function onChange(value) {\n        // console.log(`selected ${value}`, moment(props.date).format('D'));\n        props.changeNewEventId(+value, moment(props.date));\n    }\n    \n    function onBlur() {\n        console.log('blur');\n    }\n    \n    function onFocus() {\n        console.log('focus');\n    }\n    \n    function onSearch(val) {\n        console.log('search:', val);\n    }\n\n    return (\n      <Modal\n        title=\"Хочешь сказать, что кто-то вовремя не убрался?\"\n        visible={props.visible}\n        // visible={this.state.visible}\n        onOk={handleCancel}\n        onCancel={handleCancel}\n      >\n        <p>\n            Дата: {moment(props.date).format('DD MM YYYY')}\n        </p>\n        <p>\n            Дежурный отдел: {props.eventName === 'Выходной' ? 'Нет' : props.eventName} \n        </p>\n        <div>\n            <Select\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Выбрать дежурного\"\n                optionFilterProp=\"children\"\n                onChange={onChange}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onSearch={onSearch}\n                filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                disabled={disabledSelect}\n            >\n                {\n                    props.data.map(item => (\n                    <Option key={item.id} value={item.id}>{item.title}</Option>\n                    ))\n                }\n            </Select>\n        </div>\n      </Modal>\n    );\n}\n\nexport default ModalWindow;","import React from 'react';\n \nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","import React from 'react';\nimport { Spin, Space } from 'antd';\n\nimport './Preloader.scss';\n\nconst Preloader = () => {\n    return (\n        <div className=\"work-area preloader\">\n            <div className=\"container\">\n                <div className=\"preloader-wrapper big active\">\n                    <Space size=\"middle\">\n                        <Spin size=\"large\" />\n                    </Space>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Preloader;","import React, { useState, useEffect, useContext } from 'react';\n\nimport './MainLayout.scss';\nimport { Layout, Menu } from 'antd';\n\nimport MyCalendar from '../../components/Calendar/Calendar';\nimport moment from 'moment';\n\nimport LogoutButton from '../../components/LogoutButton/LogoutButton';\n\nimport counterEvents from '../../services/index';\nimport ModalWindow from '../../components/Modal/Modal';\nimport Firebase from '../../context/firebaseContext';\n\nimport Preloader from '../../components/Preloader/Preloader';\n\nconst { Header, Content, Footer } = Layout;\n\nconst dataDefault = [\n  {title: 'Ожидание данных', id: 999},\n  // {title: 'архитекторы', id: 1},\n  // {title: 'it', id: 2},\n  // {title: 'бухгалтерия', id: 3},\n  // {title: 'аналитики', id: 4},\n  // {title: 'open space 1', id: 5},\n  // {title: 'open space 2', id: 6},\n];\n\nconst MainLayout = (props) => {\n    const [loading, setLoading] = useState(true);\n    useEffect(() => setLoading(false), []);\n\n    // console.log(props);\n    // коллекция объектов, которые нужно распределить по дням\n    const [data, setData] = useState(dataDefault);\n    // текущая дата\n    const [today, setToday] = useState(0);\n    // текущий месяц\n    // const [thisMonth, setThisMonth] = useState(0);\n    // количество дней в месяце\n    // const [numberOfDaysInThisMonth, setNumberOfDays] = useState(30);\n    // мутации календрных дней\n    const [mutationData, setMutationData] = useState({});\n    // массив с данными для календаря \n    const [dataForCalendar, setdataForCalendar] = useState([]);\n    // модалка\n    const [modal, setModal] = useState(false);\n    // дата которую решили изменить\n    const [changeDate, setChangeDate] = useState(0);\n    // id и title дежурных на который поменяем событие\n    const [changeEventId, setChangeEventId] = useState(0);\n    const [changeEventTitle, setChangeEventTitle] = useState('');\n\n    // коллекция объектов, которые нужно распределить по дням\n    const { getDepartmentsRef, getMutationsRef, auth } = useContext(Firebase);\n    useEffect(() => {\n      // получение данных из базы\n      getDepartmentsRef()\n        .once('value')\n        .then(res => {\n            const array = res.val();\n            let newArray = [];\n            array.forEach(element => {\n              newArray.push(element);\n            });\n            return newArray;\n        })\n        .then(res => {\n          setData(res);\n          console.log(`взяли data из базы`);\n        })\n        .catch(e => {\n          console.log(e.message);\n        });         \n    }, [getDepartmentsRef]);\n    // текущая дата\n    useEffect(() => {\n      setToday(new Date()); // '2020-10-12'\n    }, []);\n    // мутации календрных дней\n    useEffect(() => {\n      const muts = {};\n      getMutationsRef({\n        year: moment(today).format('YYYY'),\n        month: moment(today).format('M'),\n      })\n        .once('value')\n        .then(res => {\n          // console.log(res.val());\n          for ( let i in res.val() ) { // потомучто, если к нам приходят мутации из 1 элема с ключом 0, то приложение рассматривает это как массив, а не объект\n            muts[i] = res.val()[i];\n          }\n          // console.log(muts, res.val())\n        })\n        .then(() => {\n          setMutationData(muts);\n        })\n        .catch(error => console.log(error.message));      \n    }, [today, getMutationsRef]);\n    // текущий месяц\n    // useEffect(() => {\n    //   setThisMonth(moment().format('M'));\n    // }, []);\n    // количество дней в месяце\n    // useEffect(() => {\n    //   setNumberOfDays(() => moment(new Date()).daysInMonth());\n    // }, []);\n    // массив с данными для календаря \n    useEffect(() => {\n      // console.log('#### mutationData1: ', mutationData);\n      setdataForCalendar(() => counterEvents({\n        data, \n        today, \n        // mutations: { // индекс дня: id очердности\n        //   0: 3,\n        //   6: 1,\n        //   7: 1,\n        //   8: 1\n        // }\n        mutations: mutationData\n      }));\n\n    }, [today, data, mutationData]);\n    // модалка\n    \n    // console.log(thisMonth, numberOfDaysInThisMonth, dataForCalendar);\n\n    const clickOnDay = (event) => {\n      // console.log(event);\n      setModal(!modal);\n      // console.log(modal);\n      setChangeDate(event.end);\n      setChangeEventId(event.eventId);\n      setChangeEventTitle(event.title);\n    }\n\n    const changeNewEventId = async (newEventId, date) => {\n      const num = +moment(date).format('D') - 1;\n      // console.log(num, newEventId);\n      setMutationData( (prevState) => {\n        return {...prevState, [num]: newEventId}\n      } ); // индекс дня: id очердности\n      // console.log(mutationData, moment(date).format('YYYY'), moment(date).format('M'));\n      let mutsFromFirebase = {};\n      await getMutationsRef({\n        year: moment(date).format('YYYY'),\n        month: moment(date).format('M')\n      })\n        .once('value')\n        .then(res => {\n          res.val().forEach((item, index) => {\n            mutsFromFirebase[index] = item;\n          })\n          // console.log(mutsFromFirebase, res.val())\n        })\n        .then(() => {\n          mutsFromFirebase[num] = newEventId;\n          // console.log(num, newEventId, mutsFromFirebase)\n          // return {...mutsFromFirebase, [num]: newEventId } // не расширяет\n        })\n        .catch(error => console.log(error.message));\n      await getMutationsRef({\n          year: moment(date).format('YYYY'),\n          month: moment(date).format('M')\n        })\n        .set(mutsFromFirebase)\n        .catch(error => console.log(error.message))\n    }\n\n    const logoutPlz = () => {\n      console.log('ок, logout');\n\n      auth.signOut();\n      localStorage.removeItem('userId');\n\n      const { history } = props;\n      history.push('/auth');\n    }\n\n    if (loading) {\n      return (\n        <Preloader />\n      );\n    }\n    \n    // первый элемент\n    return (\n      <>\n        <Layout className=\"layout main-layout main-layout_all-height\">\n          <Header>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n              <Menu.Item key=\"1\">nav 1</Menu.Item>\n              <Menu.Item key=\"2\">nav 2</Menu.Item>\n              <Menu.Item key=\"3\">nav 3</Menu.Item>\n            </Menu>\n            <LogoutButton\n              logoutPlz={logoutPlz}\n            />\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <div className=\"site-layout-content main-container\">\n              <MyCalendar events={dataForCalendar} clickOnDay={clickOnDay} />\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Duty Cleaing ©2020 Created by DVM Group</Footer>\n        </Layout>\n        <ModalWindow \n          date={changeDate} \n          data={data} \n          visible={modal} \n          changeVisible={setModal}\n          eventId={changeEventId}\n          eventName={changeEventTitle}\n          changeNewEventId={changeNewEventId}\n          today={today}\n        />\n      </>\n\n    );\n}\n\nexport default MainLayout;","import React, { useContext, useEffect, useState } from 'react';\n\nimport './AuthLayout.scss';\n\nimport { Form, Input, Button } from 'antd';\nimport FirebaseContext from '../../context/firebaseContext';\n// import RoutesContext from '../../context/routesContext';\nimport Preloader from '../../components/Preloader/Preloader';\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16,\n    },\n};\n\nconst AuthLayout = (props) => {\n\n    console.log('#### props in Auth: ', props, props.history);\n\n    const [loading, setLoading] = useState(true);\n    useEffect(() => setLoading(false), []);\n\n    const [history, setHistory] = useState(null);\n    useEffect(() => {\n        const { history } = props;\n        setHistory(history);\n    }, [props]);\n\n    const [authOk, setAuthOk] = useState(false);\n\n    // let localUserData = localStorage.getItem('userId');\n    // const [localData, setLocalData] = useState(localUserData);\n\n    const { signWithEmail } = useContext(FirebaseContext);\n    // const { history } = props; // useContext(RoutesContext);\n    \n    useEffect(() => {\n        // const { history } = props;\n        if ( authOk === true ) {\n            // console.log(history);\n            history.push('/main');  \n        }\n    }, [authOk, history]);\n\n    const onFinish = values => {\n\n    //   const { history } = props;\n\n      \n      const {email, password} = values;\n      signWithEmail(email, password)\n        .then(res => {\n            console.log('Success!');\n            // console.log(res, values);\n            setAuthOk(true);\n            localStorage.setItem('userId', res.user.uid);\n            \n            // console.log(localStorage.getItem('userId'));\n            // console.log(history);\n            history.push('/main');\n        })\n        .catch(() => {\n            console.log('кто ты тварь?');\n            setAuthOk(false);\n        });\n    };\n    \n    const onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    if (loading) {\n        return (\n          <Preloader />\n        );\n    }\n\n    return (\n        <div className=\"form-wrap\">\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                className=\"form\"\n            >\n                <Form.Item\n                label=\"Email\"\n                name=\"email\"\n                rules={[\n                    {\n                    required: true,\n                    message: 'Please input your email!',\n                    },\n                ]}\n                >\n                <Input />\n                </Form.Item>\n        \n                <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                    {\n                    required: true,\n                    message: 'Please input your password!',\n                    },\n                ]}\n                >\n                <Input.Password />\n                </Form.Item>\n        \n                <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Вкатиться\n                </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport default AuthLayout;","import React from 'react';\n \nconst RoutesContext = React.createContext(null);\n\nexport default RoutesContext;","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nexport const PrivateRoute = ({component: Component, ...rest}) => (\n    <Route \n        {...rest}\n        render={props => localStorage.getItem('userId') \n            ? <Component {...props} /> \n            : <Redirect to='/auth' />\n        }\n    />\n);","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport MainLayout from './layouts/MainLayout/MainLayout';\nimport AuthLayout from './layouts/AuthLayout/AuthLayout';\n\nimport RoutesContext from './context/routesContext';\n\nimport { PrivateRoute } from './services/privateRoute';\n\nconst useRoutes = (isAuthenticated) => {\n\n    // console.log(isAuthenticated)\n\n    // if (isAuthenticated) {\n    //     return (\n    //         <Switch>\n    //             <Route \n    //                 path=\"/main\"\n    //                 render={(props) => {\n    //                     return (\n    //                         <RoutesContext.Provider value={{...props}}>\n    //                             <MainLayout {...props} />\n    //                         </RoutesContext.Provider>\n    //                     );\n    //                 }}\n    //             />\n    //             <Redirect to=\"/main\" />\n    //         </Switch>\n    //     )\n    // }\n\n    return (\n        <Switch>\n            <PrivateRoute \n                path=\"/main\"\n                component={MainLayout}\n            />\n            <Route \n                path=\"/auth\" \n                render={(props) => {\n                    return (\n                        <RoutesContext.Provider value={{...props}}>\n                            <AuthLayout {...props} />\n                        </RoutesContext.Provider>\n                    );\n                }}\n            >\n            </Route>\n            <Redirect to=\"/auth\" />\n        </Switch>\n        \n        // <Switch>\n        //     <Route path=\"/auth\" exact>\n        //         <AuthLayout />\n        //     </Route>\n        //     <Redirect to=\"/auth\" />\n        // </Switch>\n    );\n}\n\nexport default useRoutes;\n\n","import React, { useContext, useEffect, useState } from 'react';\nimport './App.scss';\n\nimport useRoutes from './routes';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Firebase from './context/firebaseContext';\nimport Preloader from './components/Preloader/Preloader';\n\nfunction App() {\n\n  // const localUserData = localStorage.getItem('userId');\n\n  const [loading, setLoading] = useState(true);\n  const [userId, setUserId] = useState(false);\n  // const [routes, setRoutes] = useState(useRoutes(false));\n  const { auth } = useContext(Firebase);\n\n  // useEffect(() => setLoading(false), [userId]);\n  // useCallback(() => {\n    \n  // });\n  useEffect(() => {\n    if (!localStorage.getItem('userId')) {\n      console.log(\n        'we don`t know who are you!', \n        // localStorage.getItem('userid')\n      );\n      setUserId(false);\n      setLoading(false);\n    } else {\n\n      console.log(\n        'we know who are you!', \n        // localStorage.getItem('userid')\n      );\n      auth.onAuthStateChanged(user => {\n        setLoading(false);\n        // console.log(user);\n\n        if (user) {\n          setUserId(user.uid);\n          localStorage.setItem('userId', JSON.stringify(user.uid)); // user;\n          // setRoutes(useRoutes(userId));\n          \n        } else {\n          setUserId(false);\n          localStorage.removeItem('userId');\n        }\n\n      })\n      // .then(res => console.log('норм вроде'))\n      // .catch(error => console.log(error));\n    }\n    \n  }, [userId, auth]); \n\n  \n  // useEffect(() => {\n  //   console.log('#### userId: ',userId)\n  //   setRoutes(useRoutes(userId));\n  // }, [userId]);\n  \n  const routes = useRoutes(userId);\n\n  if (loading) {\n    return (\n      <Preloader />\n    );\n  }\n\n  return (\n    <>\n      <Router>\n        {routes}\n      </Router> \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nclass Firebase {\n    constructor() {\n        firebase.initializeApp(firebaseConfig); // инициализируем firebase с конфигом\n\n        this.auth = firebase.auth();\n        this.database = firebase.database();\n        this.userUid = null;\n    }\n\n    signWithEmail = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    // методы для работы с бд\n    getDepartmentsRef = () => this.database.ref('/departments/');\n    getMutationsRef = (object) => {\n        const {year, month} = object;\n        return this.database.ref(`/mutations/${year}/${month}/`);\n    }\n\n    requestRef = (str) => this.database.ref(str);\n}\n\nexport default Firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport FirebaseContext from './context/firebaseContext';\nimport Firebase from './services/firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider\n    value={new Firebase()}\n  >\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}